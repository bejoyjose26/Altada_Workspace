{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Altada Workspace\\\\sfo-biotech-ui\\\\Frontend_Client\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Altada Workspace\\\\sfo-biotech-ui\\\\Frontend_Client\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StrokeColorUpdater = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Enums_1 = require(\"../../Enums\");\n\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n  var _a;\n\n  var colorValue = value;\n\n  if (!colorValue || !valueAnimation.enable) {\n    return;\n  }\n\n  var offset = Utils_1.randomInRange(valueAnimation.offset);\n  var velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6;\n\n  if (!decrease || colorValue.status === Enums_1.AnimationStatus.increasing) {\n    colorValue.value += velocity;\n\n    if (decrease && colorValue.value > max) {\n      colorValue.status = Enums_1.AnimationStatus.decreasing;\n      colorValue.value -= colorValue.value % max;\n    }\n  } else {\n    colorValue.value -= velocity;\n\n    if (colorValue.value < 0) {\n      colorValue.status = Enums_1.AnimationStatus.increasing;\n      colorValue.value += colorValue.value;\n    }\n  }\n\n  if (colorValue.value > max) {\n    colorValue.value %= max;\n  }\n}\n\nfunction updateStrokeColor(particle, delta) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n  if (!particle.stroke.color) {\n    return;\n  }\n\n  var animationOptions = particle.stroke.color.animation;\n  var valueAnimations = animationOptions;\n\n  if (valueAnimations.enable !== undefined) {\n    var hue = (_b = (_a = particle.strokeColor) === null || _a === void 0 ? void 0 : _a.h) !== null && _b !== void 0 ? _b : (_c = particle.color) === null || _c === void 0 ? void 0 : _c.h;\n\n    if (hue) {\n      updateColorValue(delta, hue, valueAnimations, 360, false);\n    }\n  } else {\n    var hslAnimations = animationOptions;\n    var h = (_e = (_d = particle.strokeColor) === null || _d === void 0 ? void 0 : _d.h) !== null && _e !== void 0 ? _e : (_f = particle.color) === null || _f === void 0 ? void 0 : _f.h;\n\n    if (h) {\n      updateColorValue(delta, h, hslAnimations.h, 360, false);\n    }\n\n    var s = (_h = (_g = particle.strokeColor) === null || _g === void 0 ? void 0 : _g.s) !== null && _h !== void 0 ? _h : (_j = particle.color) === null || _j === void 0 ? void 0 : _j.s;\n\n    if (s) {\n      updateColorValue(delta, s, hslAnimations.s, 100, true);\n    }\n\n    var l = (_l = (_k = particle.strokeColor) === null || _k === void 0 ? void 0 : _k.l) !== null && _l !== void 0 ? _l : (_m = particle.color) === null || _m === void 0 ? void 0 : _m.l;\n\n    if (l) {\n      updateColorValue(delta, l, hslAnimations.l, 100, true);\n    }\n  }\n}\n\nvar StrokeColorUpdater = /*#__PURE__*/function () {\n  function StrokeColorUpdater() {\n    _classCallCheck(this, StrokeColorUpdater);\n  }\n\n  _createClass(StrokeColorUpdater, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var _a, _b, _c;\n\n      var color = particle.stroke.color;\n      return !particle.destroyed && !particle.spawning && color !== undefined && (((_a = particle.strokeColor) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && color.animation.h.enable || ((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && color.animation.s.enable || ((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && color.animation.l.enable);\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateStrokeColor(particle, delta);\n    }\n  }]);\n\n  return StrokeColorUpdater;\n}();\n\nexports.StrokeColorUpdater = StrokeColorUpdater;","map":null,"metadata":{},"sourceType":"script"}